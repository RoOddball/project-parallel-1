
#include "ebolaHeader.h"

int main(){
   
  int m,immunity,subjectInit,turn,sick,quarantine,traditions,i;
  float x,y;

  printf( "\n Please input the size of the matrix \n");
  scanf("%d",&m);
  printf("\n size is: %d \n",m);

  printf( "\n Please select option... Do you wish to consider the tradition of mourning the dead for 3 turns?(1/0) \n");
  scanf("%d",&traditions);
  printf("\n traditions is: %d \n",traditions);

  printf( "\n Please select option... Do you wish to consider the quarantine feature?(1/0)\n");
  scanf("%d",&quarantine);
  printf("\n quarantine is: %d \n",quarantine);
  
  int neighborsInd[8][2];
  turn =0;

  //int currSubjects[m][m];
  int** futSubjects = (int **)malloc(m*sizeof(int *));
  for(i=0;i<m;i++)
  futSubjects[i] = (int *)malloc(m*sizeof(int));


  //int futSubjects[m][m];
  int** currSubjects = (int **)malloc(m*sizeof(int *));
  for(i=0;i<m;i++)
  currSubjects[i] = (int *)malloc(m*sizeof(int));


  
  printf("current: %d future: %d ",currSubjects,futSubjects);

  
  futSubjects[i] = (int *)malloc(m*sizeof(int));
  

  
    populaceInitialize(currSubjects,m);

   for(int i=0; i<m*m;i++)
     printf("\n in main future array subject %d: %d",i,futSubjects[i]);
   
   populaceUpdate(currSubjects,futSubjects,m);

   for(int i=0; i<m*m;i++)
     printf("\n in main future array subject %d: %d",i,futSubjects[i]);
  
  while(sick>0){ 
  
    populaceProcess(currSubjects,futSubjects,&neighborsInd,m,traditions,quarantine);
    populaceUpdate(futSubjects,currSubjects,m);


    turn++;
    sick--;
    printf("\n\n\n++ day %d ++",turn);
    sick = sumUp(currSubjects,m);
  }

   printf("\n -- free cell :%d",currSubjects[0][0]);
  
  for(i=0;i<m;i++){

    free(currSubjects[i]);
    free(futSubjects[i]);
    
  }

  free(currSubjects);
  free(futSubjects);

  printf("\n -- free cell :%d",&currSubjects[0][0]);
  printf("\n -- free pointer :%d",&currSubjects);

    printf("\n -- free cell :%d",&futSubjects[0][1]);
   printf("\n -- free pointer :%d",&futSubjects);

   return 0;
}
